{"version":3,"sources":["components/EducationTab.js","components/EducationForm.js","components/GeneralInfoForm.js","components/PreviewCV.js","components/SubmitButton.js","components/WorkExpTab.js","components/WorkHistoryForm.js","components/Collapsible.js","App.js","reportWebVitals.js","index.js"],"names":["EducationTab","removeEduTab","editEduTab","cvData","data","filter","item","education","map","edu","length","className","degree","eduStartDate","format","Date","eduEndDate","style","fontSize","onClick","eduId","uuid","EducationForm","value","dataFromInput","addEduTab","type","name","onChange","e","eduCity","institution","htmlFor","id","GeneralInfoForm","fname","lname","profession","address","stateProvince","email","PreviewCV","togglePreview","showPreview","profile","prof","work","display","info","workStartDate","workEndDate","jobTitle","companyName","jobCity","jobDescription","SubmitButton","aria-hidden","WorkExpTab","removeWorkExpTab","editWorkExpTab","workId","WorkHistoryForm","addWorkExp","rows","wrap","resize","marginTop","width","placeholder","Collapsible","content","title","useState","toggle","setToggle","App","setCvData","setShowPreview","generalInfo","setGeneralInfo","workInfo","setWorkInfo","eduInfo","setEduInfo","filteredData","console","log","handleFormChange","target","xmlns","viewBox","fill","fill-opacity","d","onSubmit","preventDefault","newCvData","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2266088d.chunk.js","sourcesContent":["import React from 'react';\nimport uuid from 'react-uuid';\nimport format from 'date-fns/format'\n\nconst EducationTab = ({ removeEduTab, editEduTab, cvData }) => {\n    const data = [...cvData].filter(item => \n      item.education).map(edu => edu.education);\n\n    if(data.length === 0) {\n      return null;\n    }\n\n    return (\n      <div>\n        {data.map((item) => {\n           return (\n            <div key={uuid()} className='work-exp-tab-ctn'>\n              <div className='work-exp-tab-info'>\n                <p><b>{item.degree}</b><br/>\n                {item.eduStartDate === '' ? '' : format(new Date(item.eduStartDate), 'MM/yyyy')}\n                {' - '} \n                {item.eduEndDate === '' ? '' : format(new Date(item.eduEndDate), 'MM/yyyy')}\n                </p>\n              </div>\n              <div className='work-exp-tab-actions' >\n                <i className=\"fas fa-trash-alt\"\n                style={{ fontSize: '1.2rem'}}\n                onClick={() => removeEduTab(item.eduId)}\n                />\n                <i className=\"fas fa-pen\"\n                onClick={() => editEduTab(item.eduId)} />\n              </div>\n            </div>\n            )\n        })}\n      </div>\n    );\n};\n\nexport default EducationTab;\n","import React, { useState } from 'react';\nimport EducationTab from './EducationTab';\n\nconst EducationForm = ({ value, \n                         dataFromInput, \n                         addEduTab,\n                         removeEduTab,\n                         editEduTab, \n                         cvData }) => {\n  \n    return (\n      <div className='form-ctn'>\n        <EducationTab cvData={cvData} \n                      removeEduTab={removeEduTab}\n                      editEduTab={editEduTab}\n                       />\n        <div className='input-ctn'>\n            <div>\n              <label>Degree </label>\n              <input type='text' \n              name='degree'\n              value={value.degree}\n              onChange={(e) => dataFromInput(e)} />\n            </div>\n            <div>\n              <label>City/Town </label>\n              <input type='text' \n              name='eduCity'\n              value={value.eduCity}\n              onChange={(e) => dataFromInput(e)} />\n            </div>  \n        </div>\n            \n        <div>\n           <label>Institution </label>\n            <input type='text'\n            name='institution'\n            value={value.institution}\n            onChange={(e) => dataFromInput(e)} />\n        </div>    \n\n        <div className='input-ctn'>\n            <div>   \n              <label htmlFor='start-date-edu'>Start date</label>\n              <input type='date' id='start-date-edu'\n              name='eduStartDate'\n              value={value.eduStartDate}\n              onChange={(e) => dataFromInput(e)} />\n            </div>\n            <div>\n              <label htmlFor='end-date-edu'>End date</label>\n              <input type='date' id='end-date-edu'\n              name='eduEndDate'\n              value={value.eduEndDate} \n              onChange={(e) => dataFromInput(e)} />\n          </div>\n        </div>   \n \n        <div>\n            <button className='add-btn'\n            onClick={addEduTab}\n            type='button'>Add education</button>\n        </div> \n      \n      </div>\n    );\n};\n\nexport default EducationForm;","import React, { useState } from 'react'\n\nconst GeneralInfoForm = ({ value, dataFromInput }) => {\n    \n    return (\n      <div className='form-ctn'>\n        <div className='input-ctn'>\n          <div>      \n            <label>First name </label>\n            <input type='text' \n            name='fname'\n            value={value.fname} \n            onChange={(e) => dataFromInput(e)} />\n          </div>\n          <div>\n            <label>Last name </label>\n            <input type='text' \n            name='lname'\n            value={value.lname} \n            onChange={(e) => dataFromInput(e)} />\n          </div>\n        </div>\n        \n        <div>\n           <label>Profession </label>\n           <input type='text' \n            name='profession'\n            value={value.profession}\n            onChange={(e) => dataFromInput(e)} />\n        </div>\n\n        <div className='input-ctn'>\n          <div>     \n            <label>City</label>\n            <input type='text' \n            name='address'\n            value={value.address}\n            onChange={(e) => dataFromInput(e)} />\n          </div>\n          <div>\n            <label>State/Province</label>\n            <input type='text' \n            name='stateProvince'\n            value={value.stateProvince}\n            onChange={(e) => dataFromInput(e)} />\n          </div>  \n        </div>\n\n        <div>\n          <label>Email</label> \n          <input type='email'\n          name='email'\n          value={value.email} \n          onChange={(e) => dataFromInput(e)} />\n        </div>\n      </div>\n    );\n};\n\nexport default GeneralInfoForm\n","import React, { useState } from 'react';\nimport uuid from 'react-uuid';\nimport format from 'date-fns/format';\nimport './PreviewCV.css';\n\nconst PreviewCV = ({ cvData,\n                     togglePreview, \n                     showPreview }) => {\n    \n    const profile = [...cvData].filter(item => \n      item.profile).map(prof => prof.profile);\n\n    const work = [...cvData].filter(item => item.work)\n      .map(item => item.work);\n\n    const education = [...cvData].filter(item => item.education)\n      .map(item => item.education);\n    \n    return (\n        <div style={{ display: showPreview ? 'block' : 'none'}} >\n          \n          <div className='preview-ctn'>\n\n          {profile?.map(info => {\n            return (\n              <div className='general-info-preview' key={uuid()}>\n                 \n                <div className='edit-cv-ctn'\n                onClick={togglePreview}>\n                  <i className=\"fas fa-pen-square\"></i>\n                </div>\n\n                <div className='profile-info-ctn'>\n                  <h1>{info.fname} {info.lname}</h1>\n                  <p>{info.profession}</p>\n                  <p><b>Address: </b>{info.address}, {info.stateProvince}</p>\n                  <p><b>Email: </b> {info.email}</p>\n                </div>  \n              </div>\n            )\n          })}\n          \n          <div className='info-preview-ctn'>\n            <h2>Work History</h2>\n            <span className='preview-border'></span>\n\n            {work?.map(info => {\n              return (\n                <div className='info-ctn' key={uuid()}>\n                  <div className='date-info-ctn'>\n                    <p>\n                      <b>\n                      {info.workStartDate === \"\" ? \"\" : format(new Date(info.workStartDate), 'MM/yyyy')}\n                      {' - '} \n                      {info.workEndDate === \"\" ? \"\" : format(new Date(info.workEndDate), 'MM/yyyy')}\n                      </b>\n                    </p>\n                  </div>\n\n                  <div className='info-desc'>\n                    <h2>{info.jobTitle}</h2>\n                    <p><i>{info.companyName}, {info.jobCity}</i></p>\n                    <p>{info.jobDescription}</p>\n                  </div>\n                </div>\n              )\n            })}\n\n          </div>\n\n          <div className='info-preview-ctn'>\n            <h2>Education</h2>\n            <span className='preview-border'></span>\n\n            {education?.map(info => {\n              return (\n                <div className='info-ctn' key={uuid()}>\n                  <div className='date-info-ctn'>\n                    <p>\n                      <b>\n                      {info.eduStartDate === \"\" ? \"\" : format(new Date(info.eduStartDate), 'MM/yyyy')}\n                      {' - '} \n                      {info.eduEndDate === \"\" ? \"\" : format(new Date(info.eduEndDate), 'MM/yyyy')}\n                      </b>\n                    </p>\n                  </div>\n\n                  <div className='info-desc'>\n                    <h2>{info.degree}</h2>\n                    <p><i>{info.institution}, {info.eduCity}</i></p>\n                  </div>\n                </div>\n              )\n            })}\n            \n          </div>  \n          </div>\n        </div>\n    );\n};\n\nexport default PreviewCV\n","import React, { useState } from 'react';\nimport './SubmitButton.css'\n\n\nconst SubmitButton = () => {\n    return (\n        <div className='submit-btn-ctn'>\n            <button type='submit'\n            className='submit-btn'>\n              <div className='btn-content'>\n                <p>Preview</p>\n                <i className=\"fas fa-check-square\"aria-hidden=\"true\">\n                </i>\n              </div>\n            </button>\n        </div>\n    );\n};\n\nexport default SubmitButton\n","import React from 'react';\nimport uuid from 'react-uuid';\nimport format from 'date-fns/format';\n\n\nconst WorkExpTab = ({ removeWorkExpTab, editWorkExpTab, cvData }) => {\n\n  const data = [...cvData].filter(item => \n    item.work).map(work => work.work);\n\n  if (data.length === 0) {\n    return null\n  }\n\n    return (\n      <div>\n        {data.map((item) => {\n          return (\n            <div key={uuid()} className='work-exp-tab-ctn'>\n              <div className='work-exp-tab-info'>\n                <p><b>{item.jobTitle}</b><br/>\n                {item.workStartDate === \"\" ? \"\" : format(new Date(item.workStartDate), 'MM/yyyy')}\n                {' - '} \n                {item.workEndDate === \"\" ? \"\" : format(new Date(item.workEndDate), 'MM/yyyy')}\n                </p>\n              </div>\n              <div className='work-exp-tab-actions' >\n                <i className=\"fas fa-trash-alt\"\n                style={{ fontSize: '1.2rem'}}\n                onClick={() => removeWorkExpTab(item?.workId)} />\n                <i className=\"fas fa-pen\"\n                onClick={() => editWorkExpTab(item?.workId)} />\n              </div>\n            </div>\n            )\n        })}\n      </div>\n    );\n};\n\nexport default WorkExpTab;\n","import React, { useState } from 'react';\nimport WorkExpTab from './WorkExpTab';\n\n\nconst WorkHistoryForm = ({ value, \n                           cvData, \n                           addWorkExp, \n                           dataFromInput, \n                           removeWorkExpTab,\n                           editWorkExpTab }) => {\n\n    return (\n        <div className='form-ctn'>\n        <WorkExpTab cvData={cvData} \n                    removeWorkExpTab={removeWorkExpTab}\n                    editWorkExpTab={editWorkExpTab} />\n          <div className='input-ctn'>\n            <div>\n              <label htmlFor='job-title'>Job Title</label>\n              <input type='text'\n              value={value.jobTitle}\n              name='jobTitle'\n              onChange={(e) => dataFromInput(e)} />\n            </div>\n            <div>  \n              <label htmlFor='job-city'>City/Town</label>\n              <input type='text'\n              value={value.jobCity}\n              name='jobCity'\n              onChange={(e) => dataFromInput(e)} />\n            </div> \n          </div>\n\n          <div>\n            <label htmlFor='company-name'>Company name</label>\n            <input type='text'\n            value={value.companyName}\n            name='companyName'            \n            onChange={(e) => dataFromInput(e)} />\n          </div>    \n        \n          <div className='input-ctn'>\n            <div> \n              <label htmlFor='start-date'>Start date</label>\n              <input type='date' id='start-date'\n              name='workStartDate'\n              value= {value.workStartDate}\n              onChange={(e) => dataFromInput(e)} />\n            </div>\n            <div> \n              <label htmlFor='end-date'>End date</label>\n              <input type='date' id='end-date'\n              name='workEndDate'\n              value={value.workEndDate} \n              onChange={(e) => dataFromInput(e)} />\n            </div>\n          </div>\n\n          <div className='textarea-ctn'>\n            <textarea rows='4' wrap='soft'\n            style={{ resize: 'none', marginTop: '0.5rem', width: '100%' }}\n            name='jobDescription'\n            value={value.jobDescription}\n            placeholder='Type your responsibilities and achievments here.'\n            onChange={(e) => dataFromInput(e)} />\n          </div>\n\n          <div>\n            <button className='add-btn'\n            type='button'\n            onClick={addWorkExp}\n            >Add work experience</button>\n          </div> \n        </div>\n    );\n};\n\nexport default WorkHistoryForm;\n","import React, { useState } from 'react'\nimport './Collapsible.css';\n\nconst Collapsible = ({ content, title }) => {\n    const [ toggle, setToggle ] = useState();\n   \n\n    function toggleCollapsible() {\n      toggle ? setToggle(false) : setToggle(true);\n      \n    };\n\n    return (\n      <div>\n          <button type='button' \n          className='collapsible'\n          onClick={toggleCollapsible}>\n          <label>{title}</label>\n          <i className={toggle ? 'fas fa-chevron-down rotate' : \n            'fas fa-chevron-down'}></i>\n          </button>  \n          <div className=\n            {toggle ? 'content content_active' : 'content'}>\n            {content}\n          </div>\n      </div>\n    );\n};\n\nexport default Collapsible\n","import React, { useState } from 'react';\nimport EducationForm from './components/EducationForm';\nimport GeneralInfoForm from './components/GeneralInfoForm'\nimport PreviewCV from './components/PreviewCV';\nimport SubmitButton from './components/SubmitButton'\nimport WorkHistoryForm from './components/WorkHistoryForm';\nimport Collapsible from './components/Collapsible';\nimport uuid from 'react-uuid';\n\nfunction App() {\n  const [ cvData, setCvData ] = useState([])\n  const [ showPreview, setShowPreview ] = useState(false);\n  const [ generalInfo, setGeneralInfo ] = useState({\n    profile: {\n      fname: '',\n      lname: '',\n      profession: '',\n      address: '',\n      stateProvince: '',\n      email: ''\n    }\n  });\n\n  const [ workInfo, setWorkInfo ] = useState({\n    work: {\n      workId: uuid(),\n      jobTitle: '',\n      jobCity: '',\n      companyName: '',\n      workStartDate: '',\n      workEndDate: '',\n      jobDescription: ''\n    }\n  });\n\n  const [ eduInfo, setEduInfo ] = useState({\n    education: {\n      eduId: uuid(),\n      degree: '',\n      institution: '',\n      eduCity: '',\n      eduStartDate: '',\n      eduEndDate: '',\n    }\n  });\n\n  const addWorkExp = () => {\n    setCvData(cvData => [ ...cvData, workInfo ]);\n\n    setWorkInfo({\n      work: {\n        workId: uuid(),\n        jobTitle: '',\n        jobCity: '',\n        companyName: '',\n        workStartDate: '',\n        workEndDate: '',\n        jobDescription: ''\n      }\n    });\n  };\n\n  const removeWorkExpTab = (id) => {\n\n    const filteredData = cvData.map(item => item).filter(work => {\n      // Checks if the array has an work Object, if yes filters\n      // the matched id else keeps it as is \n      return work.work ? work.work.workId !== id : work;\n    });\n\n    setCvData(filteredData)\n\n    console.log(cvData);\n  };\n\n  const editWorkExpTab = (id) => {\n    const filteredData = cvData.map(item => item).filter(work => {\n      // Checks if the array has an work Object, if yes filters\n      // the matched id else keeps it as is \n      return work.work ? work.work.workId === id : null;\n    });\n\n    removeWorkExpTab(id);\n    \n    setWorkInfo( ...filteredData );\n    console.log(cvData);\n  };\n\n  const addEduTab = () => {\n    setCvData(cvData => [ ...cvData, eduInfo ]);\n    \n    setEduInfo({\n      education: {\n        eduId: uuid(),\n        degree: '',\n        institution: '',\n        eduCity: '',\n        eduStartDate: '',\n        eduEndDate: '',\n      }\n    });\n\n    console.log(cvData)\n  };\n\n  const editEduTab = (id) => {\n    const filteredData = cvData.map(item => item).filter(edu => {\n      // Checks if the array has an education Object, if yes filters\n      // the matched id else keeps it as is \n      return edu.education ? edu.education.eduId === id : null;\n    });\n\n    removeEduTab(id);\n\n    setEduInfo( ...filteredData )\n    console.log(cvData);\n  };\n  \n  const removeEduTab = (id) => {\n    const filteredData = cvData.map(item => item).filter(edu => {\n      // Checks if the array has an education Object, if yes filters\n      // the matched id else keeps it as is \n      return edu.education ? edu.education.eduId !== id : edu;\n    });\n\n    setCvData(filteredData);\n\n    console.log(filteredData)\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newCvData = cvData.filter(item => !item.profile).concat(\n      {\n        ...generalInfo,\n        profile: generalInfo.profile\n      }\n    );\n    \n    setCvData(newCvData);\n    \n    setEduInfo({\n      education: {\n        eduId: uuid(),\n        degree: '',\n        institution: '',\n        eduCity: '',\n        eduStartDate: '',\n        eduEndDate: '',\n      }\n    });\n\n    setWorkInfo({\n      work: {\n        workId: uuid(),\n        jobTitle: '',\n        jobCity: '',\n        companyName: '',\n        workStartDate: '',\n        workEndDate: '',\n        jobDescription: ''\n      }\n    });\n\n    togglePreview();\n  };\n  \n  const handleFormChange = (e) => {\n      const { name, value } = e.target\n\n      setGeneralInfo({\n        ...generalInfo,\n        profile: {\n          ...generalInfo.profile,\n          [name]: value\n        }\n      });\n\n      setWorkInfo({\n        ...workInfo,\n        work: {\n          ...workInfo.work,\n          [name]: value\n        }\n        \n      });\n\n      setEduInfo({\n        ...eduInfo,\n        education: {\n          ...eduInfo.education,\n          [name]: value\n        }\n      });\n  };\n\n  const togglePreview = () => {\n    showPreview ? setShowPreview(false) : setShowPreview(true);\n  };\n  return (\n    <div>\n      <svg className='svg-gradient' \n      xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n      <path fill=\"rgb(77, 101, 240)\" fill-opacity=\"1\" \n      d=\"M0,128L80,160C160,192,320,256,480,240C640,224,800,128,960,122.7C1120,117,1280,203,1360,245.3L1440,288L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\n      </svg>\n      <PreviewCV cvData={cvData}\n                 togglePreview={togglePreview} \n                 showPreview={showPreview} />\n    \n      <form onSubmit={handleSubmit} className='forms-ctn'\n      style={{ display: showPreview ? 'none' : 'flex'}}>\n\n        <SubmitButton />\n\n        <Collapsible title='Profile' \n        content={<GeneralInfoForm dataFromInput={handleFormChange}\n        value={generalInfo.profile} />}\n        />\n        <Collapsible title='Work Experience'\n        content={<WorkHistoryForm \n                 dataFromInput={handleFormChange}\n                 addWorkExp={addWorkExp}\n                 value={workInfo.work}\n                 cvData={cvData}\n                 removeWorkExpTab={removeWorkExpTab}\n                 editWorkExpTab={editWorkExpTab} />}\n        />\n        <Collapsible title='Education' \n        content={<EducationForm \n                 dataFromInput={handleFormChange}\n                 value={eduInfo.education}\n                 cvData={cvData}\n                 addEduTab={addEduTab}\n                 removeEduTab={removeEduTab}\n                 editEduTab={editEduTab} />}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}